import org.yaml.snakeyaml.Yaml
import com.wiredforcode.gradle.spawn.SpawnProcessTask
import com.wiredforcode.gradle.spawn.KillProcessTask

buildscript {
    repositories {
        mavenCentral()
        maven { url 'http://dl.bintray.com/vermeulen-mp/gradle-plugins' }
        jcenter()
    }
    dependencies {
        classpath 'org.flywaydb:flyway-gradle-plugin:4.0'
        classpath 'org.yaml:snakeyaml:1.17'
        classpath 'com.github.michaelruocco:embedded-mysql-plugin:2.0.0'
        classpath 'com.github.samueltbrown:gradle-cucumber-plugin:0.9'
        classpath 'com.wiredforcode:gradle-spawn-plugin:0.6.0'
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.0.1'
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.flywaydb.flyway'
apply plugin: 'application'
apply plugin: 'embedded-mysql'
apply plugin: 'com.github.samueltbrown.cucumber'
apply plugin: 'com.wiredforcode.spawn'
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'

project.ext {
    artifactId = "dropwizard-web-template"
    group = 'com.github.michaelruocco'
    version = '1.0.0'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile 'io.dropwizard:dropwizard-core:0.9.3'
    compile 'io.dropwizard:dropwizard-jdbi:0.9.3'
    compile 'io.dropwizard:dropwizard-testing:0.9.3'
    compile 'io.dropwizard:dropwizard-views-freemarker:0.9.3'
    compile 'uk.co.deloittedigital.dropwizard:dropwizard-hikaricp:1.0.0'
    compile 'org.jdbi:jdbi:2.73'
    compile 'mysql:mysql-connector-java:6.0.3'
    compile 'io.federecio:dropwizard-swagger:0.7.0'
    compile 'org.apache.httpcomponents:httpclient:4.5.2'

    testCompile 'junit:junit:4.12'
    testCompile 'org.assertj:assertj-core:3.5.2'
    testCompile 'info.cukes:cucumber-java:1.2.4'
    testCompile 'info.cukes:cucumber-junit:1.2.4'
    testCompile 'org.yaml:snakeyaml:1.17'
    testCompile 'com.h2database:h2:1.4.192'
    testCompile 'commons-dbcp:commons-dbcp:1.4'
    testCompile 'org.mockito:mockito-all:1.10.19'
    testCompile 'org.flywaydb:flyway-core:4.0.3'
}

def getConfigPath() {
    'config/local-web-template.yml'
}

def getDatabaseConfig() {
    def yaml = new Yaml()
    def config = new File(configPath)
    def yamlConfig = yaml.load(config.newReader())
    yamlConfig.database
}

embeddedMysql {
    def databaseConfig = getDatabaseConfig()
    url = databaseConfig.url
    version = 'v5_6_22'
}

flyway {
    def databaseConfig = getDatabaseConfig()

    user = databaseConfig.user
    password = databaseConfig.password
    url = databaseConfig.url
    driver = databaseConfig.driverClass
}

task setupMysql {
    dependsOn startEmbeddedMysql, flywayMigrate, flywayInfo
    flywayMigrate.mustRunAfter startEmbeddedMysql
    flywayInfo.mustRunAfter flywayMigrate
}

run {
    dependsOn setupMysql
    mainClassName = mainClassName
    args 'server', configPath
}

def getMainClassName() {
    'uk.co.mruoc.Main'
}

def getArtifactName() {
    project.ext.artifactId + '-all'
}

task allJar(type: Jar) {
    dependsOn assemble
    manifest {
        attributes 'Implementation-Version': project.ext.version
        attributes 'Main-Class': mainClassName
    }
    baseName = artifactName
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

task startServer(type: SpawnProcessTask) {
    dependsOn allJar, setupMysql
    setupMysql.mustRunAfter allJar
    command 'java -jar build/libs/' + artifactName + '.jar server ' + configPath
    ready 'org.eclipse.jetty.server.Server: Started'
}

task stopServer(type: KillProcessTask)

task acceptanceTest(type: JavaExec) {
    dependsOn startServer
    finalizedBy stopServer
    main = "cucumber.api.cli.Main"
    classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.cucumber.output
    args = ['-p', 'pretty',
            '-p', 'json:build/reports/cucumberResults.json',
            '--glue', 'uk.co.mruoc',
            'src/cucumber/resources']
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}